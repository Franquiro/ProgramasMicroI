

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Oct 15 05:00:27 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4620 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _RCREG	set	4014
    49  0000                     _TXREG	set	4013
    50  0000                     _BAUDCON	set	4024
    51  0000                     _RCSTA	set	4011
    52  0000                     _TXSTA	set	4012
    53  0000                     _SPBRG	set	4015
    54  0000                     _TRISC	set	3988
    55  0000                     _TRISD	set	3989
    56  0000                     _CREN	set	32092
    57  0000                     _OERR	set	32089
    58  0000                     _TXIF	set	31988
    59  0000                     _RCIF	set	31989
    60  0000                     _LATD2	set	31842
    61                           
    62                           ; #config settings
    63  0000                     
    64                           	psect	cinit
    65  00FF42                     __pcinit:
    66                           	opt callstack 0
    67  00FF42                     start_initialization:
    68                           	opt callstack 0
    69  00FF42                     __initialization:
    70                           	opt callstack 0
    71  00FF42                     end_of_initialization:
    72                           	opt callstack 0
    73  00FF42                     __end_of__initialization:
    74                           	opt callstack 0
    75  00FF42  0100               	movlb	0
    76  00FF44  EFE1  F07F         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	opt callstack 0
    81  000001                     ??_USART_send_char:
    82  000001                     USART_config@Baud_Rate:
    83                           	opt callstack 0
    84                           
    85                           ; 4 bytes @ 0x0
    86  000001                     	ds	1
    87  000002                     USART_send_char@salida:
    88                           	opt callstack 0
    89                           
    90                           ; 1 bytes @ 0x1
    91  000002                     	ds	3
    92  000005                     ??_main:
    93                           
    94                           ; 1 bytes @ 0x4
    95  000005                     	ds	1
    96  000006                     main@dato:
    97                           	opt callstack 0
    98                           
    99                           ; 1 bytes @ 0x5
   100  000006                     	ds	1
   101                           
   102 ;;
   103 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   104 ;;
   105 ;; *************** function _main *****************
   106 ;; Defined at:
   107 ;;		line 17 in file "main.c"
   108 ;; Parameters:    Size  Location     Type
   109 ;;		None
   110 ;; Auto vars:     Size  Location     Type
   111 ;;  dato            1    5[COMRAM] unsigned char 
   112 ;; Return value:  Size  Location     Type
   113 ;;                  1    wreg      void 
   114 ;; Registers used:
   115 ;;		wreg, status,2, status,0, cstack
   116 ;; Tracked objects:
   117 ;;		On entry : 0/0
   118 ;;		On exit  : 0/0
   119 ;;		Unchanged: 0/0
   120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   125 ;;Total ram usage:        2 bytes
   126 ;; Hardware stack levels required when called:    1
   127 ;; This function calls:
   128 ;;		_USART_config
   129 ;;		_USART_receive_char
   130 ;;		_USART_send_char
   131 ;; This function is called by:
   132 ;;		Startup code after reset
   133 ;; This function uses a non-reentrant model
   134 ;;
   135                           
   136                           	psect	text0
   137  00FFC2                     __ptext0:
   138                           	opt callstack 0
   139  00FFC2                     _main:
   140                           	opt callstack 30
   141  00FFC2                     
   142                           ;main.c: 18:     char dato;;main.c: 21:     TRISD = 0xFB;
   143  00FFC2  0EFB               	movlw	251
   144  00FFC4  6E95               	movwf	149,c	;volatile
   145  00FFC6                     
   146                           ;main.c: 22:     LATD2 = 1;
   147  00FFC6  848C               	bsf	3980,2,c	;volatile
   148  00FFC8                     
   149                           ;main.c: 23:     USART_config(9600);
   150  00FFC8  0E80               	movlw	128
   151  00FFCA  6E01               	movwf	USART_config@Baud_Rate^0,c
   152  00FFCC  0E25               	movlw	37
   153  00FFCE  6E02               	movwf	(USART_config@Baud_Rate+1)^0,c
   154  00FFD0  0E00               	movlw	0
   155  00FFD2  6E03               	movwf	(USART_config@Baud_Rate+2)^0,c
   156  00FFD4  0E00               	movlw	0
   157  00FFD6  6E04               	movwf	(USART_config@Baud_Rate+3)^0,c
   158  00FFD8  ECA4  F07F         	call	_USART_config	;wreg free
   159  00FFDC                     
   160                           ;main.c: 24:     _delay((unsigned long)((50)*(4000000/4000.0)));
   161  00FFDC  0E41               	movlw	65
   162  00FFDE  6E05               	movwf	??_main^0,c
   163  00FFE0  0EEE               	movlw	238
   164  00FFE2                     u57:
   165  00FFE2  2EE8               	decfsz	wreg,f,c
   166  00FFE4  D7FE               	bra	u57
   167  00FFE6  2E05               	decfsz	??_main^0,f,c
   168  00FFE8  D7FC               	bra	u57
   169  00FFEA  D000               	nop2	
   170  00FFEC                     l783:
   171                           
   172                           ;main.c: 27:         dato = USART_receive_char();
   173  00FFEC  ECB0  F07F         	call	_USART_receive_char	;wreg free
   174  00FFF0  6E06               	movwf	main@dato^0,c
   175  00FFF2                     
   176                           ;main.c: 28:         USART_send_char(dato);
   177  00FFF2  5006               	movf	main@dato^0,w,c
   178  00FFF4  ECC3  F07F         	call	_USART_send_char
   179  00FFF8  EFF6  F07F         	goto	l783
   180  00FFFC  EF00  F000         	goto	start
   181  010000                     __end_of_main:
   182                           	opt callstack 0
   183                           
   184 ;; *************** function _USART_send_char *****************
   185 ;; Defined at:
   186 ;;		line 43 in file "main.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;  salida          1    wreg     unsigned char 
   189 ;; Auto vars:     Size  Location     Type
   190 ;;  salida          1    1[COMRAM] unsigned char 
   191 ;; Return value:  Size  Location     Type
   192 ;;                  1    wreg      void 
   193 ;; Registers used:
   194 ;;		wreg, status,2, status,0
   195 ;; Tracked objects:
   196 ;;		On entry : 0/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   203 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   204 ;;Total ram usage:        2 bytes
   205 ;; Hardware stack levels used:    1
   206 ;; This function calls:
   207 ;;		Nothing
   208 ;; This function is called by:
   209 ;;		_main
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213                           	psect	text1
   214  00FF86                     __ptext1:
   215                           	opt callstack 0
   216  00FF86                     _USART_send_char:
   217                           	opt callstack 30
   218                           
   219                           ;incstack = 0
   220                           ;USART_send_char@salida stored from wreg
   221  00FF86  6E02               	movwf	USART_send_char@salida^0,c
   222  00FF88                     l50:
   223  00FF88  A89E               	btfss	3998,4,c	;volatile
   224  00FF8A  EFC9  F07F         	goto	u31
   225  00FF8E  EFCB  F07F         	goto	u30
   226  00FF92                     u31:
   227  00FF92  EFC4  F07F         	goto	l50
   228  00FF96                     u30:
   229  00FF96                     
   230                           ;main.c: 45:     if(salida == '\r'){
   231  00FF96  0E0D               	movlw	13
   232  00FF98  1802               	xorwf	USART_send_char@salida^0,w,c
   233  00FF9A  A4D8               	btfss	status,2,c
   234  00FF9C  EFD2  F07F         	goto	u41
   235  00FFA0  EFD4  F07F         	goto	u40
   236  00FFA4                     u41:
   237  00FFA4  EFD6  F07F         	goto	l755
   238  00FFA8                     u40:
   239  00FFA8                     
   240                           ;main.c: 46:         TXREG = '\n';
   241  00FFA8  0E0A               	movlw	10
   242  00FFAA  6EAD               	movwf	173,c	;volatile
   243  00FFAC                     l755:
   244                           
   245                           ;main.c: 48:     TXREG = salida;
   246  00FFAC  C002  FFAD         	movff	USART_send_char@salida,4013	;volatile
   247  00FFB0                     
   248                           ;main.c: 49:     _delay((unsigned long)((5)*(4000000/4000.0)));
   249  00FFB0  0E07               	movlw	7
   250  00FFB2  6E01               	movwf	??_USART_send_char^0,c
   251  00FFB4  0E7D               	movlw	125
   252  00FFB6                     u67:
   253  00FFB6  2EE8               	decfsz	wreg,f,c
   254  00FFB8  D7FE               	bra	u67
   255  00FFBA  2E01               	decfsz	??_USART_send_char^0,f,c
   256  00FFBC  D7FC               	bra	u67
   257  00FFBE  F000               	nop	
   258  00FFC0  0012               	return		;funcret
   259  00FFC2                     __end_of_USART_send_char:
   260                           	opt callstack 0
   261                           
   262 ;; *************** function _USART_receive_char *****************
   263 ;; Defined at:
   264 ;;		line 52 in file "main.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;		None
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      unsigned char 
   271 ;; Registers used:
   272 ;;		wreg, status,2
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   282 ;;Total ram usage:        0 bytes
   283 ;; Hardware stack levels used:    1
   284 ;; This function calls:
   285 ;;		Nothing
   286 ;; This function is called by:
   287 ;;		_main
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           	psect	text2
   292  00FF60                     __ptext2:
   293                           	opt callstack 0
   294  00FF60                     _USART_receive_char:
   295                           	opt callstack 30
   296  00FF60                     l57:
   297  00FF60  AA9E               	btfss	3998,5,c	;volatile
   298  00FF62  EFB5  F07F         	goto	u11
   299  00FF66  EFB7  F07F         	goto	u10
   300  00FF6A                     u11:
   301  00FF6A  EFB0  F07F         	goto	l57
   302  00FF6E                     u10:
   303  00FF6E                     
   304                           ;main.c: 54:     if(OERR){
   305  00FF6E  A2AB               	btfss	4011,1,c	;volatile
   306  00FF70  EFBC  F07F         	goto	u21
   307  00FF74  EFBE  F07F         	goto	u20
   308  00FF78                     u21:
   309  00FF78  EFC1  F07F         	goto	l745
   310  00FF7C                     u20:
   311  00FF7C                     
   312                           ;main.c: 55:         CREN = 0;
   313  00FF7C  98AB               	bcf	4011,4,c	;volatile
   314                           
   315                           ;main.c: 56:         __nop();
   316  00FF7E  F000               	nop	
   317                           
   318                           ;main.c: 57:         CREN=1;
   319  00FF80  88AB               	bsf	4011,4,c	;volatile
   320  00FF82                     l745:
   321                           
   322                           ;main.c: 59:     return RCREG;
   323  00FF82  50AE               	movf	174,w,c	;volatile
   324  00FF84  0012               	return		;funcret
   325  00FF86                     __end_of_USART_receive_char:
   326                           	opt callstack 0
   327                           
   328 ;; *************** function _USART_config *****************
   329 ;; Defined at:
   330 ;;		line 33 in file "main.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;  Baud_Rate       4    0[COMRAM] long 
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   347 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   348 ;;Total ram usage:        4 bytes
   349 ;; Hardware stack levels used:    1
   350 ;; This function calls:
   351 ;;		Nothing
   352 ;; This function is called by:
   353 ;;		_main
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text3
   358  00FF48                     __ptext3:
   359                           	opt callstack 0
   360  00FF48                     _USART_config:
   361                           	opt callstack 30
   362  00FF48                     
   363                           ;main.c: 34:     TRISC = 0xBF;
   364  00FF48  0EBF               	movlw	191
   365  00FF4A  6E94               	movwf	148,c	;volatile
   366                           
   367                           ;main.c: 35:     SPBRG = 0x06;
   368  00FF4C  0E06               	movlw	6
   369  00FF4E  6EAF               	movwf	175,c	;volatile
   370                           
   371                           ;main.c: 36:     TXSTA = 0x20;
   372  00FF50  0E20               	movlw	32
   373  00FF52  6EAC               	movwf	172,c	;volatile
   374                           
   375                           ;main.c: 37:     RCSTA = 0x90;
   376  00FF54  0E90               	movlw	144
   377  00FF56  6EAB               	movwf	171,c	;volatile
   378                           
   379                           ;main.c: 38:     BAUDCON = 0x00;
   380  00FF58  0E00               	movlw	0
   381  00FF5A  6EB8               	movwf	184,c	;volatile
   382  00FF5C                     
   383                           ;main.c: 39:     RCIF = 0;
   384  00FF5C  9A9E               	bcf	3998,5,c	;volatile
   385  00FF5E  0012               	return		;funcret
   386  00FF60                     __end_of_USART_config:
   387                           	opt callstack 0
   388  0000                     
   389                           	psect	rparam
   390  0000                     tosu	equ	0xFFF
   391                           tosh	equ	0xFFE
   392                           tosl	equ	0xFFD
   393                           stkptr	equ	0xFFC
   394                           pclatu	equ	0xFFB
   395                           pclath	equ	0xFFA
   396                           pcl	equ	0xFF9
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           prodh	equ	0xFF4
   402                           prodl	equ	0xFF3
   403                           indf0	equ	0xFEF
   404                           postinc0	equ	0xFEE
   405                           postdec0	equ	0xFED
   406                           preinc0	equ	0xFEC
   407                           plusw0	equ	0xFEB
   408                           fsr0h	equ	0xFEA
   409                           fsr0l	equ	0xFE9
   410                           wreg	equ	0xFE8
   411                           indf1	equ	0xFE7
   412                           postinc1	equ	0xFE6
   413                           postdec1	equ	0xFE5
   414                           preinc1	equ	0xFE4
   415                           plusw1	equ	0xFE3
   416                           fsr1h	equ	0xFE2
   417                           fsr1l	equ	0xFE1
   418                           bsr	equ	0xFE0
   419                           indf2	equ	0xFDF
   420                           postinc2	equ	0xFDE
   421                           postdec2	equ	0xFDD
   422                           preinc2	equ	0xFDC
   423                           plusw2	equ	0xFDB
   424                           fsr2h	equ	0xFDA
   425                           fsr2l	equ	0xFD9
   426                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      6       6
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_USART_config

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     129
                                              4 COMRAM     2     2      0
                       _USART_config
                 _USART_receive_char
                    _USART_send_char
 ---------------------------------------------------------------------------------
 (1) _USART_send_char                                      2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _USART_receive_char                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         4     0      4      76
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_config
   _USART_receive_char
   _USART_send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      6       6       1        4.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Oct 15 05:00:27 2019

      USART_send_char@salida 0002                           l50 FF88                           l61 FF84  
                         l54 FFC0                           l47 FF5E                           l57 FF60  
                         l59 FF6E                           u10 FF6E                           u11 FF6A  
                         u20 FF7C                           u21 FF78                           u30 FF96  
                         u31 FF92                           u40 FFA8                           u41 FFA4  
                         u57 FFE2                           u67 FFB6                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                  __CFG_LVP$ON 000000                          l741 FF60  
                        l743 FF7C                          l751 FF96                          l745 FF82  
                        l753 FFA8                          l771 FF48                          l755 FFAC  
                        l773 FF5C                          l757 FFB0                          l749 FF88  
                        l781 FFDC                          l783 FFEC                          l775 FFC2  
                        l785 FFF2                          l777 FFC6                          l779 FFC8  
               __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000                          wreg 000FE8  
               __CFG_WDT$OFF 000000                         _CREN 007D5C                         _RCIF 007CF5  
                       _OERR 007D59              _USART_send_char FF86                         _TXIF 007CF4  
                       _main FFC2                         start 0000                __CFG_IESO$OFF 000000  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000                        ?_main 0001  
                      _LATD2 007C62                        _RCREG 000FAE                        _RCSTA 000FAB  
                      _SPBRG 000FAF                        _TRISC 000F94                        _TRISD 000F95  
                      _TXREG 000FAD                        _TXSTA 000FAC                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000                        status 000FD8        USART_config@Baud_Rate 0001  
            __initialization FF42                 __end_of_main 0000                       ??_main 0005  
              __activetblptr 000000      __end_of_USART_send_char FFC2               __CFG_XINST$OFF 000000  
             __CFG_STVREN$ON 000000                   __accesstop 0080      __end_of__initialization FF42  
            __CFG_PBADEN$OFF 000000                ___rparam_used 000001               __pcstackCOMRAM 0001  
         _USART_receive_char FF60             ?_USART_send_char 0001          ?_USART_receive_char 0001  
       ??_USART_receive_char 0001                      _BAUDCON 000FB8                      __Hparam 0000  
                    __Lparam 0000                      __pcinit FF42                      __ramtop 1000  
                    __ptext0 FFC2                      __ptext1 FF86                      __ptext2 FF60  
                    __ptext3 FF48         end_of_initialization FF42                ?_USART_config 0001  
        start_initialization FF42             __CFG_OSC$INTIO67 000000               ??_USART_config 0005  
           __CFG_LPT1OSC$OFF 000000     __size_of_USART_send_char 003C  __size_of_USART_receive_char 0026  
          __CFG_CCP2MX$PORTC 000000             __CFG_WDTPS$32768 000000         __end_of_USART_config FF60  
                   __Hrparam 0000                     __Lrparam 0000            ??_USART_send_char 0001  
         __CFG_BOREN$SBORDIS 000000                __size_of_main 003E                     main@dato 0006  
      __size_of_USART_config 0018   __end_of_USART_receive_char FF86                 _USART_config FF48  
